on:
  [push]
  # push:
  #   # Sequence of patterns matched against refs/tags
  #   tags:
  #     - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  # build:
  #   name: "${{ matrix.sdk-version }} / ${{ matrix.os }}"
  #   defaults:
  #     run:
  #       working-directory: packages/cli
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest, macos-latest]
  #       sdk-version: [stable] #, dev]
  #       include:
  #         - os: macOS-latest
  #           TARGET: macos
  #         - os: ubuntu-latest
  #           TARGET: linux
  #         - os: windows-latest
  #           TARGET: windows

  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Setup Dart ${{ matrix.dart-version }}
  #       uses: DanTup/gh-actions/setup-dart@master
  #       with:
  #         channel: ${{ matrix.sdk-version }}

  #     - name: Install dependencies
  #       run: pub get

  #     - name: Run Test and Builder
  #       run: pub run build_runner test --delete-conflicting-outputs

  #     - name: Deploy to Pub (Linux)
  #       run: pub run grinder pkg-pub-deploy

  #     - name: Deploy Github (Linux)
  #       run: pub run grinder pkg-github-all

  deploy:
    name: "${{ matrix.sdk-version }} / ${{ matrix.os }}"
    # needs: build
    env:
      PUB_CREDENTIALS: ${{ secrets.PUB_CREDENTIALS }}
      CHOCOLATEY_TOKEN: ${{ secrets.CHOCOLATEY_TOKEN }}
    defaults:
      run:
        working-directory: packages/cli
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        sdk-version: [stable] #, dev]
        include:
          - os: macos-latest
            TARGET: macos
          - os: windows-latest
            TARGET: windows
          # - os: ubuntu-latest
          #   TARGET: linux

    steps:
      - uses: actions/checkout@v1

      - name: Setup Dart ${{ matrix.dart-version }}
        uses: DanTup/gh-actions/setup-dart@master
        with:
          channel: ${{ matrix.sdk-version }}

      - name: Install dependencies
        run: pub get

      - name: Run Builder for Version
        run: pub run build_runner build --delete-conflicting-outputs

      # - name: Deploy to Pub (Linux)
      #   run: pub run grinder pkg-pub-deploy
      #   if: matrix.os == 'ubuntu-latest'

      # - name: Deploy Github (Linux)
      #   run: pub run grinder pkg-github-all
      #   if: matrix.os == 'ubuntu-latest'

      - name: Deploy Chocolatey (Windows)
        run: pub run grinder pkg-chocolatey-deploy
        if: matrix.TARGET == 'windows'

      - name: Deploy Homebrew (macOS)
        run: pub run grinder pkg-homebrew-update
        if: matrix.TARGET == 'macos'
